version: '3.9'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=mvpdiploma
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=somepassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  database_service:
    container_name: database-service-container
    build:
      context: ./database-service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=somepassword
      - DB_NAME=mvpdiploma
      - SECRET_KEY=YAKNOW
      - SERVER_PORT=5002
      - VISUALISATION_SERVICE=visualisation_service-container
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5002:5002"
    restart: always

  auth_service:
    container_name: auth_service-container
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=somepassword
      - DB_NAME=mvpdiploma
      - API_GATEWAY_URL=http://api-gateway:5001
      - SECRET_KEY=QKJORMCUTPQRM
      - JWT_SECRET=QKJORMCUTPQRMRTNHER
      - SERVER_PORT=5003
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5003:5003"
    restart: always

  history_service:
    container_name: history_service-container
    build:
      context: ./history-service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=somepassword
      - DB_NAME=mvpdiploma
      - SECRET_KEY=YAKNOW
      - SERVER_PORT=5008
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5008:5008"
    restart: always

  text_to_sql_service:
    container_name: text_to_sql_service-container
    build:
      context: ./text-to-sql-service-go
      dockerfile: Dockerfile
    ports:
      - "5006:5006"
    depends_on:
      db:
        condition: service_healthy
    restart: always

  visualisation-service:
    container_name: visualisation_service-container
    build:
      context: ./visualisation-service
      dockerfile: Dockerfile
    ports:
      - "5007:5007"
    restart: always

  open_api_service:
    container_name: open_api_service-container
    build:
      context: ./open-api-service
      dockerfile: Dockerfile
    ports:
      - "5009:5009"
    depends_on:
      db:
        condition: service_healthy
    restart: always

  api:
    container_name: api-gateway
    build:
      context: ./API-Gateway
      dockerfile: Dockerfile
    environment:
      - SERVER_PORT=5001
      - AUTH_SERVICE_URL=http://auth_service-container:5003
      - DATABASE_SERVICE_URL=http://database-service-container:5002
      - TEXT_TO_SQL_SERVICE_URL=http://text_to_sql_service-container:5006
      - HISTORY_SERVICE_URL=http://history_service-container:5008
    ports:
      - "5001:5001"
    depends_on:
      - auth_service
      - database_service
      - text_to_sql_service
      - history_service
    restart: always

  diploma_frontend:
    build:
      context: ./diploma-frontend
      dockerfile: Dockerfile
    ports:
      - "80:4173"
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://api-gateway:5001
    restart: always

volumes:
  postgres_data:
    driver: local